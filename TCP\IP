# TCP/IP
## 1.https加密过程是怎样的
答：通过TLS协议利用非对称加解密得到的密钥进行的对称加密通信：
- 1.A生成随机数1 和协议、加密方式->B 
- 2.B生成随机数2，返回CA证书 
- 3.A验证证书生效，生成随机数3并利用证书公钥加密->B 证书私钥解密得到随机数3 
- 4.A B 利用3各随机数用第一步A传的加密方式生成一个密钥，通过该密钥来进行对称加密通信
加分项：防止中间人攻击

[开始学习](https://zhuanlan.zhihu.com/p/26682342)
## 2.3次握手过程
答：
- 第一次握手：浏览器向服务端发送连接请求SYN，发送后浏览器状态变为SYN_SENT，一定时间内等待ACK;
- 第二次握手：服务端收到SYN确认状态变为SYN_RECIVED;向浏览器发送SYN+ACK，状态变为LAST-ACK;一定时间内等待ACK;
- 第三次握手：浏览器收到ACK后，向服务端发送对应ACK，状态变为ESTABLISHED,服务端确认ACK后，状态也变为ESTABLISHED，此时建立链接完成
加分项：为什么要3次，两次不行吗

[开始学习](https://coolshell.cn/articles/11564.html)
## 3.http2.0做了哪些改进，http2.0有哪些不足，http3.0是什么
答：

http2.0改进
- 1.二进制传输：帧、流
- 2.头部压缩:HPack压缩字符串
- 3.多路复用:把报文转换成流，传输时通过帧来传输，每个帧标识属于某个流，一个连接中可以传输多个流，对应多  条请求，减少连接开销，保持高速传输
- 4.服务端Push:收到请求会响应其余的资源
- 5.缺点:一个包失败会导致全部包重新请求

http2.0存在问题有
- 1./TCP层存在分组队首阻塞问题
- 2.单个包丢失导致整个连接阻塞
- 3.移动互联网领域表现不佳(弱网环境)

http3.0是谷歌基于基于UDP协议的QUIC协议来实现的传输层协议，相比于http2.0有以下几个优点

- 更完善的多路复用：传输隔离，UDP支持多个流传输，多个流之间互不影响
- 0RTT 建链：0RTT指数据包一来一回的往返时间，0RTT建立传输层/加密层 连接/加密连接
- 纠错机制（前向纠错）：通过校验包和其余包计算丢失的一个包内容，多个包丢失不适用
- 更好的拥塞控制：默认TCP的慢启动，拥塞避免，快速重传，快速恢复拥塞控制算法，优化了几个性能点
- 连接迁移：64位的随机数作为连接的ID，WIFI -> 4G ID相同连接保持

加分项：HTTP3 如何解决HTTP2缺点，0RTT不是真的0

[开始学习http](https://coolshell.cn/articles/19840.html)
[学习http2.0](https://juejin.cn/post/6844903984524705800)
[学习http3.0](https://blog.csdn.net/wolfGuiDao/article/details/108729560)
## 4.tcp滑动窗口是什么
答：是TCP协议用于网络流控的技术

接收端告诉发送端还能接收多少数据，发送端根据这个数据来控制传输的数据大小不超过这个范围
优点：合理控制网络流量，保证传输数据有序和且可靠

[开始学习](https://coolshell.cn/articles/11564.html)
## 5.tcp重试机制
答：

超时重传机制：包丢失超时则死等包重传
- 1.重传漏的一个包
- 2.重传所有包
- 缺点：第一种重传时间慢，第二种浪费带宽，两种timeout等待时间长

快速重传机制：包丢失则发送3个ACK给发送端后开始重传
- 1.优点：解决了超时重传等timeout问题
- 2.缺点：没解决多个包丢失重传问题

SACK 方法：TCP头里加一个SACK，和ACK一起返回，带上数据碎板
- 优点：解决了确认重传哪些包
- 缺点：接收方Reneging，接收方有权把已经报给发送端SACK里的数据给丢了（内存不够），发送方还是要依赖  ACK，并维护Time-Out

Duplicate SACK：主要使用了SACK来告诉发送方有哪些数据被重复接收了
- 优点：让发送端确认哪些数据因为ACK丢失还是网络延迟等因素被重传了


[开始学习](https://coolshell.cn/articles/11564.html)
